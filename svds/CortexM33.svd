<?xml version="1.0" encoding="UTF-8"?>
<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <name>CortexM33</name>
  <description>Extracted from https://github.com/rp-rs/rp235x-pac/blob/main/svd/RP2350.svd.patched</description>
  <cpu>
    <name>CM33</name>
    <revision>r1p0</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>true</fpuPresent>
    <dspPresent>true</dspPresent>
    <vtorPresent>true</vtorPresent>
    <nvicPrioBits>4</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
    <deviceNumInterrupts>52</deviceNumInterrupts>
    <sauNumRegions>8</sauNumRegions>
  </cpu>
  <peripherals>
    <peripheral>
      <name>EPPB</name>
      <description>Cortex-M33 EPPB vendor register block for RP2350</description>
      <baseAddress>0xE0080000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>NMI_MASK0</name>
          <description>NMI mask for IRQs 0 through 31. This register is core-local, and is reset by a processor warm reset.</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>NMI_MASK0</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NMI_MASK1</name>
          <description>NMI mask for IRQs 0 though 51. This register is core-local, and is reset by a processor warm reset.</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>NMI_MASK1</name>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLEEPCTRL</name>
          <description>Nonstandard sleep control register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>WICENACK</name>
              <description>Status signal from the processor's interrupt controller. Changes to WICENREQ are eventually reflected in WICENACK.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WICENREQ</name>
              <description>Request that the next processor deep sleep is a WIC sleep. After setting this bit, before sleeping, poll WICENACK to ensure the processor interrupt controller has acknowledged the change.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LIGHT_SLEEP</name>
              <description>By default, any processor sleep will deassert the system-level clock request. Reenabling the clocks incurs 5 cycles of additional latency on wakeup.

                            Setting LIGHT_SLEEP to 1 keeps the clock request asserted during a normal sleep (Arm SCR.SLEEPDEEP = 0), for faster wakeup. Processor deep sleep (Arm SCR.SLEEPDEEP = 1) is not affected, and will always deassert the system-level clock request.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PPB</name>
      <description>TEAL registers accessible through the debug interface</description>
      <baseAddress>0xE0000000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x43000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ITM_STIM0</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM1</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM2</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM3</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM4</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM5</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM6</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM7</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM8</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM9</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM10</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM11</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM12</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM13</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM14</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM15</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM16</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM17</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM18</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM19</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM20</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM21</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM22</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM23</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM24</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM25</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM26</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM27</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM28</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM29</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM30</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_STIM31</name>
          <description>Provides the interface for generating Instrumentation packets</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMULUS</name>
              <description>Data to write to the Stimulus Port FIFO, for forwarding as an Instrumentation packet. The size of write access determines the type of Instrumentation packet generated.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_TER0</name>
          <description>Provide an individual enable bit for each ITM_STIM register</description>
          <addressOffset>0xE00</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STIMENA</name>
              <description>For STIMENA[m] in ITM_TER*n, controls whether ITM_STIM(32*n + m) is enabled</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_TPR</name>
          <description>Controls which stimulus ports can be accessed by unprivileged code</description>
          <addressOffset>0xE40</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRIVMASK</name>
              <description>Bit mask to enable tracing on ITM stimulus ports</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_TCR</name>
          <description>Configures and controls transfers through the ITM interface</description>
          <addressOffset>0xE80</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BUSY</name>
              <description>Indicates whether the ITM is currently processing events</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRACEBUSID</name>
              <description>Identifier for multi-source trace stream formatting. If multi-source trace is in use, the debugger must write a unique non-zero trace ID value to this field</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GTSFREQ</name>
              <description>Defines how often the ITM generates a global timestamp, based on the global timestamp clock frequency, or disables generation of global timestamps</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSPRESCALE</name>
              <description>Local timestamp prescaler, used with the trace packet reference clock</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STALLENA</name>
              <description>Stall the PE to guarantee delivery of Data Trace packets.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWOENA</name>
              <description>Enables asynchronous clocking of the timestamp counter</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENA</name>
              <description>Enables forwarding of hardware event packet from the DWT unit to the ITM for output to the TPIU</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCENA</name>
              <description>Enables Synchronization packet transmission for a synchronous TPIU</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENA</name>
              <description>Enables Local timestamp generation</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITMENA</name>
              <description>Enables the ITM</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ATREADY</name>
          <description>Integration Mode: Read ATB Ready</description>
          <addressOffset>0xEF0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AFVALID</name>
              <description>A read of this bit returns the value of AFVALID</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ATREADY</name>
              <description>A read of this bit returns the value of ATREADY</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ATVALID</name>
          <description>Integration Mode: Write ATB Valid</description>
          <addressOffset>0xEF8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AFREADY</name>
              <description>A write to this bit gives the value of AFREADY</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATREADY</name>
              <description>A write to this bit gives the value of ATVALID</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_ITCTRL</name>
          <description>Integration Mode Control Register</description>
          <addressOffset>0xF00</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>IME</name>
              <description>Integration mode enable bit - The possible values are:  0 - The trace unit is not in integration mode. 1 - The trace unit is in integration mode. This mode enables: A debug agent to perform topology detection. SoC test software to perform integration testing.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_DEVARCH</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFBC</addressOffset>
          <resetValue>0x47701A01</resetValue>
          <fields>
            <field>
              <name>ARCHITECT</name>
              <description>Defines the architect of the component. Bits [31:28] are the JEP106 continuation code (JEP106 bank ID, minus 1) and bits [27:21] are the JEP106 ID code.</description>
              <bitRange>[31:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRESENT</name>
              <description>Defines that the DEVARCH register is present</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REVISION</name>
              <description>Defines the architecture revision of the component</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHVER</name>
              <description>Defines the architecture version of the component</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHPART</name>
              <description>Defines the architecture of the component</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_DEVTYPE</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFCC</addressOffset>
          <resetValue>0x00000043</resetValue>
          <fields>
            <field>
              <name>SUB</name>
              <description>Component sub-type</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR</name>
              <description>Component major type</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_PIDR4</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFD0</addressOffset>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>SIZE</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_2</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_PIDR5</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFD4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ITM_PIDR5</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_PIDR6</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFD8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ITM_PIDR6</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_PIDR7</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFDC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ITM_PIDR7</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_PIDR0</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFE0</addressOffset>
          <resetValue>0x00000021</resetValue>
          <fields>
            <field>
              <name>PART_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_PIDR1</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFE4</addressOffset>
          <resetValue>0x000000BD</resetValue>
          <fields>
            <field>
              <name>DES_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PART_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_PIDR2</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFE8</addressOffset>
          <resetValue>0x0000000B</resetValue>
          <fields>
            <field>
              <name>REVISION</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>JEDEC</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_PIDR3</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFEC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>REVAND</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMOD</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_CIDR0</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFF0</addressOffset>
          <resetValue>0x0000000D</resetValue>
          <fields>
            <field>
              <name>PRMBL_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_CIDR1</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFF4</addressOffset>
          <resetValue>0x00000090</resetValue>
          <fields>
            <field>
              <name>CLASS</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRMBL_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_CIDR2</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFF8</addressOffset>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>PRMBL_2</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITM_CIDR3</name>
          <description>Provides CoreSight discovery information for the ITM</description>
          <addressOffset>0xFFC</addressOffset>
          <resetValue>0x000000B1</resetValue>
          <fields>
            <field>
              <name>PRMBL_3</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_CTRL</name>
          <description>Provides configuration and status information for the DWT unit, and used to control features of the unit</description>
          <addressOffset>0x1000</addressOffset>
          <resetValue>0x73741824</resetValue>
          <fields>
            <field>
              <name>NUMCOMP</name>
              <description>Number of DWT comparators implemented</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NOTRCPKT</name>
              <description>Indicates whether the implementation does not support trace</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NOEXTTRIG</name>
              <description>Reserved, RAZ</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NOCYCCNT</name>
              <description>Indicates whether the implementation does not include a cycle counter</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NOPRFCNT</name>
              <description>Indicates whether the implementation does not include the profiling counters</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CYCDISS</name>
              <description>Controls whether the cycle counter is disabled in Secure state</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CYCEVTENA</name>
              <description>Enables Event Counter packet generation on POSTCNT underflow</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FOLDEVTENA</name>
              <description>Enables DWT_FOLDCNT counter</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LSUEVTENA</name>
              <description>Enables DWT_LSUCNT counter</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SLEEPEVTENA</name>
              <description>Enable DWT_SLEEPCNT counter</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXCEVTENA</name>
              <description>Enables DWT_EXCCNT counter</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CPIEVTENA</name>
              <description>Enables DWT_CPICNT counter</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXTTRCENA</name>
              <description>Enables generation of Exception Trace packets</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PCSAMPLENA</name>
              <description>Enables use of POSTCNT counter as a timer for Periodic PC Sample packet generation</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCTAP</name>
              <description>Selects the position of the synchronization packet counter tap on the CYCCNT counter. This determines the Synchronization packet rate</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CYCTAP</name>
              <description>Selects the position of the POSTCNT tap on the CYCCNT counter</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POSTINIT</name>
              <description>Initial value for the POSTCNT counter</description>
              <bitRange>[8:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POSTPRESET</name>
              <description>Reload value for the POSTCNT counter</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CYCCNTENA</name>
              <description>Enables CYCCNT</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_CYCCNT</name>
          <description>Shows or sets the value of the processor cycle counter, CYCCNT</description>
          <addressOffset>0x1004</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CYCCNT</name>
              <description>Increments one on each processor clock cycle when DWT_CTRL.CYCCNTENA == 1 and DEMCR.TRCENA == 1. On overflow, CYCCNT wraps to zero</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_EXCCNT</name>
          <description>Counts the total cycles spent in exception processing</description>
          <addressOffset>0x100C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>EXCCNT</name>
              <description>Counts one on each cycle when all of the following are true: - DWT_CTRL.EXCEVTENA == 1 and DEMCR.TRCENA == 1. - No instruction is executed, see DWT_CPICNT. - An exception-entry or exception-exit related operation is in progress. - Either SecureNoninvasiveDebugAllowed() == TRUE, or NS-Req for the operation is set to Non-secure and NoninvasiveDebugAllowed() == TRUE.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_LSUCNT</name>
          <description>Increments on the additional cycles required to execute all load or store instructions</description>
          <addressOffset>0x1014</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LSUCNT</name>
              <description>Counts one on each cycle when all of the following are true: - DWT_CTRL.LSUEVTENA == 1 and DEMCR.TRCENA == 1. - No instruction is executed, see DWT_CPICNT. - No exception-entry or exception-exit operation is in progress, see DWT_EXCCNT. - A load-store operation is in progress. - Either SecureNoninvasiveDebugAllowed() == TRUE, or NS-Req for the operation is set to Non-secure and NoninvasiveDebugAllowed() == TRUE.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_FOLDCNT</name>
          <description>Increments on the additional cycles required to execute all load or store instructions</description>
          <addressOffset>0x1018</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>FOLDCNT</name>
              <description>Counts on each cycle when all of the following are true: - DWT_CTRL.FOLDEVTENA == 1 and DEMCR.TRCENA == 1. - At least two instructions are executed, see DWT_CPICNT. - Either SecureNoninvasiveDebugAllowed() == TRUE, or the PE is in Non-secure state and NoninvasiveDebugAllowed() == TRUE. The counter is incremented by the number of instructions executed, minus one</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_COMP0</name>
          <description>Provides a reference value for use by watchpoint comparator 0</description>
          <addressOffset>0x1020</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DWT_COMP0</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_FUNCTION0</name>
          <description>Controls the operation of watchpoint comparator 0</description>
          <addressOffset>0x1028</addressOffset>
          <resetValue>0x58000000</resetValue>
          <fields>
            <field>
              <name>ID</name>
              <description>Identifies the capabilities for MATCH for comparator *n</description>
              <bitRange>[31:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MATCHED</name>
              <description>Set to 1 when the comparator matches</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DATAVSIZE</name>
              <description>Defines the size of the object being watched for by Data Value and Data Address comparators</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACTION</name>
              <description>Defines the action on a match. This field is ignored and the comparator generates no actions if it is disabled by MATCH</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCH</name>
              <description>Controls the type of match generated by this comparator</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_COMP1</name>
          <description>Provides a reference value for use by watchpoint comparator 1</description>
          <addressOffset>0x1030</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DWT_COMP1</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_FUNCTION1</name>
          <description>Controls the operation of watchpoint comparator 1</description>
          <addressOffset>0x1038</addressOffset>
          <resetValue>0x89000828</resetValue>
          <fields>
            <field>
              <name>ID</name>
              <description>Identifies the capabilities for MATCH for comparator *n</description>
              <bitRange>[31:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MATCHED</name>
              <description>Set to 1 when the comparator matches</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DATAVSIZE</name>
              <description>Defines the size of the object being watched for by Data Value and Data Address comparators</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACTION</name>
              <description>Defines the action on a match. This field is ignored and the comparator generates no actions if it is disabled by MATCH</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCH</name>
              <description>Controls the type of match generated by this comparator</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_COMP2</name>
          <description>Provides a reference value for use by watchpoint comparator 2</description>
          <addressOffset>0x1040</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DWT_COMP2</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_FUNCTION2</name>
          <description>Controls the operation of watchpoint comparator 2</description>
          <addressOffset>0x1048</addressOffset>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>ID</name>
              <description>Identifies the capabilities for MATCH for comparator *n</description>
              <bitRange>[31:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MATCHED</name>
              <description>Set to 1 when the comparator matches</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DATAVSIZE</name>
              <description>Defines the size of the object being watched for by Data Value and Data Address comparators</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACTION</name>
              <description>Defines the action on a match. This field is ignored and the comparator generates no actions if it is disabled by MATCH</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCH</name>
              <description>Controls the type of match generated by this comparator</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_COMP3</name>
          <description>Provides a reference value for use by watchpoint comparator 3</description>
          <addressOffset>0x1050</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DWT_COMP3</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_FUNCTION3</name>
          <description>Controls the operation of watchpoint comparator 3</description>
          <addressOffset>0x1058</addressOffset>
          <resetValue>0x20000800</resetValue>
          <fields>
            <field>
              <name>ID</name>
              <description>Identifies the capabilities for MATCH for comparator *n</description>
              <bitRange>[31:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MATCHED</name>
              <description>Set to 1 when the comparator matches</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DATAVSIZE</name>
              <description>Defines the size of the object being watched for by Data Value and Data Address comparators</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACTION</name>
              <description>Defines the action on a match. This field is ignored and the comparator generates no actions if it is disabled by MATCH</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MATCH</name>
              <description>Controls the type of match generated by this comparator</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_DEVARCH</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FBC</addressOffset>
          <resetValue>0x47701A02</resetValue>
          <fields>
            <field>
              <name>ARCHITECT</name>
              <description>Defines the architect of the component. Bits [31:28] are the JEP106 continuation code (JEP106 bank ID, minus 1) and bits [27:21] are the JEP106 ID code.</description>
              <bitRange>[31:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRESENT</name>
              <description>Defines that the DEVARCH register is present</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REVISION</name>
              <description>Defines the architecture revision of the component</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHVER</name>
              <description>Defines the architecture version of the component</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHPART</name>
              <description>Defines the architecture of the component</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_DEVTYPE</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FCC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SUB</name>
              <description>Component sub-type</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR</name>
              <description>Component major type</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_PIDR4</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FD0</addressOffset>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>SIZE</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_2</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_PIDR5</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FD4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DWT_PIDR5</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_PIDR6</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FD8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DWT_PIDR6</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_PIDR7</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FDC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DWT_PIDR7</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_PIDR0</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FE0</addressOffset>
          <resetValue>0x00000021</resetValue>
          <fields>
            <field>
              <name>PART_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_PIDR1</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FE4</addressOffset>
          <resetValue>0x000000BD</resetValue>
          <fields>
            <field>
              <name>DES_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PART_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_PIDR2</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FE8</addressOffset>
          <resetValue>0x0000000B</resetValue>
          <fields>
            <field>
              <name>REVISION</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>JEDEC</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_PIDR3</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FEC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>REVAND</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMOD</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_CIDR0</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FF0</addressOffset>
          <resetValue>0x0000000D</resetValue>
          <fields>
            <field>
              <name>PRMBL_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_CIDR1</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FF4</addressOffset>
          <resetValue>0x00000090</resetValue>
          <fields>
            <field>
              <name>CLASS</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRMBL_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_CIDR2</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FF8</addressOffset>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>PRMBL_2</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DWT_CIDR3</name>
          <description>Provides CoreSight discovery information for the DWT</description>
          <addressOffset>0x1FFC</addressOffset>
          <resetValue>0x000000B1</resetValue>
          <fields>
            <field>
              <name>PRMBL_3</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_CTRL</name>
          <description>Provides FPB implementation information, and the global enable for the FPB unit</description>
          <addressOffset>0x2000</addressOffset>
          <resetValue>0x60005580</resetValue>
          <fields>
            <field>
              <name>REV</name>
              <description>Flash Patch and Breakpoint Unit architecture revision</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUM_CODE_14_12_</name>
              <description>Indicates the number of implemented instruction address comparators. Zero indicates no Instruction Address comparators are implemented. The Instruction Address comparators are numbered from 0 to NUM_CODE - 1</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUM_LIT</name>
              <description>Indicates the number of implemented literal address comparators. The Literal Address comparators are numbered from NUM_CODE to NUM_CODE + NUM_LIT - 1</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUM_CODE_7_4_</name>
              <description>Indicates the number of implemented instruction address comparators. Zero indicates no Instruction Address comparators are implemented. The Instruction Address comparators are numbered from 0 to NUM_CODE - 1</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY</name>
              <description>Writes to the FP_CTRL are ignored unless KEY is concurrently written to one</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>Enables the FPB</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_REMAP</name>
          <description>Indicates whether the implementation supports Flash Patch remap and, if it does, holds the target address for remap</description>
          <addressOffset>0x2004</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RMPSPT</name>
              <description>Indicates whether the FPB unit supports the Flash Patch remap function</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REMAP</name>
              <description>Holds the bits[28:5] of the Flash Patch remap address</description>
              <bitRange>[28:5]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_COMP0</name>
          <description>Holds an address for comparison. The effect of the match depends on the configuration of the FPB and whether the comparator is an instruction address comparator or a literal address comparator</description>
          <addressOffset>0x2008</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BE</name>
              <description>Selects between flashpatch and breakpoint functionality</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_COMP1</name>
          <description>Holds an address for comparison. The effect of the match depends on the configuration of the FPB and whether the comparator is an instruction address comparator or a literal address comparator</description>
          <addressOffset>0x200C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BE</name>
              <description>Selects between flashpatch and breakpoint functionality</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_COMP2</name>
          <description>Holds an address for comparison. The effect of the match depends on the configuration of the FPB and whether the comparator is an instruction address comparator or a literal address comparator</description>
          <addressOffset>0x2010</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BE</name>
              <description>Selects between flashpatch and breakpoint functionality</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_COMP3</name>
          <description>Holds an address for comparison. The effect of the match depends on the configuration of the FPB and whether the comparator is an instruction address comparator or a literal address comparator</description>
          <addressOffset>0x2014</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BE</name>
              <description>Selects between flashpatch and breakpoint functionality</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_COMP4</name>
          <description>Holds an address for comparison. The effect of the match depends on the configuration of the FPB and whether the comparator is an instruction address comparator or a literal address comparator</description>
          <addressOffset>0x2018</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BE</name>
              <description>Selects between flashpatch and breakpoint functionality</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_COMP5</name>
          <description>Holds an address for comparison. The effect of the match depends on the configuration of the FPB and whether the comparator is an instruction address comparator or a literal address comparator</description>
          <addressOffset>0x201C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BE</name>
              <description>Selects between flashpatch and breakpoint functionality</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_COMP6</name>
          <description>Holds an address for comparison. The effect of the match depends on the configuration of the FPB and whether the comparator is an instruction address comparator or a literal address comparator</description>
          <addressOffset>0x2020</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BE</name>
              <description>Selects between flashpatch and breakpoint functionality</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_COMP7</name>
          <description>Holds an address for comparison. The effect of the match depends on the configuration of the FPB and whether the comparator is an instruction address comparator or a literal address comparator</description>
          <addressOffset>0x2024</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BE</name>
              <description>Selects between flashpatch and breakpoint functionality</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_DEVARCH</name>
          <description>Provides CoreSight discovery information for the FPB</description>
          <addressOffset>0x2FBC</addressOffset>
          <resetValue>0x47701A03</resetValue>
          <fields>
            <field>
              <name>ARCHITECT</name>
              <description>Defines the architect of the component. Bits [31:28] are the JEP106 continuation code (JEP106 bank ID, minus 1) and bits [27:21] are the JEP106 ID code.</description>
              <bitRange>[31:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRESENT</name>
              <description>Defines that the DEVARCH register is present</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REVISION</name>
              <description>Defines the architecture revision of the component</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHVER</name>
              <description>Defines the architecture version of the component</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHPART</name>
              <description>Defines the architecture of the component</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_DEVTYPE</name>
          <description>Provides CoreSight discovery information for the FPB</description>
          <addressOffset>0x2FCC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SUB</name>
              <description>Component sub-type</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR</name>
              <description>Component major type</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_PIDR4</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FD0</addressOffset>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>SIZE</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_2</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_PIDR5</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FD4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>FP_PIDR5</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_PIDR6</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FD8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>FP_PIDR6</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_PIDR7</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FDC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>FP_PIDR7</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_PIDR0</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FE0</addressOffset>
          <resetValue>0x00000021</resetValue>
          <fields>
            <field>
              <name>PART_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_PIDR1</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FE4</addressOffset>
          <resetValue>0x000000BD</resetValue>
          <fields>
            <field>
              <name>DES_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PART_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_PIDR2</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FE8</addressOffset>
          <resetValue>0x0000000B</resetValue>
          <fields>
            <field>
              <name>REVISION</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>JEDEC</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_PIDR3</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FEC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>REVAND</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMOD</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_CIDR0</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FF0</addressOffset>
          <resetValue>0x0000000D</resetValue>
          <fields>
            <field>
              <name>PRMBL_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_CIDR1</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FF4</addressOffset>
          <resetValue>0x00000090</resetValue>
          <fields>
            <field>
              <name>CLASS</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRMBL_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_CIDR2</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FF8</addressOffset>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>PRMBL_2</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FP_CIDR3</name>
          <description>Provides CoreSight discovery information for the FP</description>
          <addressOffset>0x2FFC</addressOffset>
          <resetValue>0x000000B1</resetValue>
          <fields>
            <field>
              <name>PRMBL_3</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICTR</name>
          <description>Provides information about the interrupt controller</description>
          <addressOffset>0xE004</addressOffset>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>INTLINESNUM</name>
              <description>Indicates the number of the highest implemented register in each of the NVIC control register sets, or in the case of NVIC_IPR*n, 4×INTLINESNUM</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ACTLR</name>
          <description>Provides IMPLEMENTATION DEFINED configuration and control options</description>
          <addressOffset>0xE008</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>EXTEXCLALL</name>
              <description>External Exclusives Allowed with no MPU</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DISITMATBFLUSH</name>
              <description>Disable ATB Flush</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FPEXCODIS</name>
              <description>Disable FPU exception outputs</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DISOOFP</name>
              <description>Disable out-of-order FP instruction completion</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DISFOLD</name>
              <description>Disable dual-issue.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DISMCYCINT</name>
              <description>Disable dual-issue.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYST_CSR</name>
          <description>Use the SysTick Control and Status Register to enable the SysTick features.</description>
          <addressOffset>0xE010</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>COUNTFLAG</name>
              <description>Returns 1 if timer counted to 0 since last time this was read. Clears on read by application or debugger.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CLKSOURCE</name>
              <description>SysTick clock source. Always reads as one if SYST_CALIB reports NOREF. 
                            Selects the SysTick timer clock source: 
                            0 = External reference clock. 
                            1 = Processor clock.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TICKINT</name>
              <description>Enables SysTick exception request: 
                            0 = Counting down to zero does not assert the SysTick exception request. 
                            1 = Counting down to zero to asserts the SysTick exception request.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>Enable SysTick counter: 
                            0 = Counter disabled. 
                            1 = Counter enabled.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYST_RVR</name>
          <description>Use the SysTick Reload Value Register to specify the start value to load into the current value register when the counter reaches 0. It can be any value between 0 and 0x00FFFFFF. A start value of 0 is possible, but has no effect because the SysTick interrupt and COUNTFLAG are activated when counting from 1 to 0. The reset value of this register is UNKNOWN. 
                    To generate a multi-shot timer with a period of N processor clock cycles, use a RELOAD value of N-1. For example, if the SysTick interrupt is required every 100 clock pulses, set RELOAD to 99.</description>
          <addressOffset>0xE014</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RELOAD</name>
              <description>Value to load into the SysTick Current Value Register when the counter reaches 0.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYST_CVR</name>
          <description>Use the SysTick Current Value Register to find the current value in the register. The reset value of this register is UNKNOWN.</description>
          <addressOffset>0xE018</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CURRENT</name>
              <description>Reads return the current value of the SysTick counter. This register is write-clear. Writing to it with any value clears the register to 0. Clearing this register also clears the COUNTFLAG bit of the SysTick Control and Status Register.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYST_CALIB</name>
          <description>Use the SysTick Calibration Value Register to enable software to scale to any required speed using divide and multiply.</description>
          <addressOffset>0xE01C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>NOREF</name>
              <description>If reads as 1, the Reference clock is not provided - the CLKSOURCE bit of the SysTick Control and Status register will be forced to 1 and cannot be cleared to 0.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SKEW</name>
              <description>If reads as 1, the calibration value for 10ms is inexact (due to clock frequency).</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TENMS</name>
              <description>An optional Reload value to be used for 10ms (100Hz) timing, subject to system clock skew errors. If the value reads as 0, the calibration value is not known.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ISER0</name>
          <description>Enables or reads the enabled state of each group of 32 interrupts</description>
          <addressOffset>0xE100</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SETENA</name>
              <description>For SETENA[m] in NVIC_ISER*n, indicates whether interrupt 32*n + m is enabled</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ISER1</name>
          <description>Enables or reads the enabled state of each group of 32 interrupts</description>
          <addressOffset>0xE104</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SETENA</name>
              <description>For SETENA[m] in NVIC_ISER*n, indicates whether interrupt 32*n + m is enabled</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ICER0</name>
          <description>Clears or reads the enabled state of each group of 32 interrupts</description>
          <addressOffset>0xE180</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLRENA</name>
              <description>For CLRENA[m] in NVIC_ICER*n, indicates whether interrupt 32*n + m is enabled</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ICER1</name>
          <description>Clears or reads the enabled state of each group of 32 interrupts</description>
          <addressOffset>0xE184</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLRENA</name>
              <description>For CLRENA[m] in NVIC_ICER*n, indicates whether interrupt 32*n + m is enabled</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ISPR0</name>
          <description>Enables or reads the pending state of each group of 32 interrupts</description>
          <addressOffset>0xE200</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SETPEND</name>
              <description>For SETPEND[m] in NVIC_ISPR*n, indicates whether interrupt 32*n + m is pending</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ISPR1</name>
          <description>Enables or reads the pending state of each group of 32 interrupts</description>
          <addressOffset>0xE204</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SETPEND</name>
              <description>For SETPEND[m] in NVIC_ISPR*n, indicates whether interrupt 32*n + m is pending</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ICPR0</name>
          <description>Clears or reads the pending state of each group of 32 interrupts</description>
          <addressOffset>0xE280</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLRPEND</name>
              <description>For CLRPEND[m] in NVIC_ICPR*n, indicates whether interrupt 32*n + m is pending</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ICPR1</name>
          <description>Clears or reads the pending state of each group of 32 interrupts</description>
          <addressOffset>0xE284</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLRPEND</name>
              <description>For CLRPEND[m] in NVIC_ICPR*n, indicates whether interrupt 32*n + m is pending</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IABR0</name>
          <description>For each group of 32 interrupts, shows the active state of each interrupt</description>
          <addressOffset>0xE300</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ACTIVE</name>
              <description>For ACTIVE[m] in NVIC_IABR*n, indicates the active state for interrupt 32*n+m</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IABR1</name>
          <description>For each group of 32 interrupts, shows the active state of each interrupt</description>
          <addressOffset>0xE304</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ACTIVE</name>
              <description>For ACTIVE[m] in NVIC_IABR*n, indicates the active state for interrupt 32*n+m</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ITNS0</name>
          <description>For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
          <addressOffset>0xE380</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ITNS</name>
              <description>For ITNS[m] in NVIC_ITNS*n, `IAAMO the target Security state for interrupt 32*n+m</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_ITNS1</name>
          <description>For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
          <addressOffset>0xE384</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ITNS</name>
              <description>For ITNS[m] in NVIC_ITNS*n, `IAAMO the target Security state for interrupt 32*n+m</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR0</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE400</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR1</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE404</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR2</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE408</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR3</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE40C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR4</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE410</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR5</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE414</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR6</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE418</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR7</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE41C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR8</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE420</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR9</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE424</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR10</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE428</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR11</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE42C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR12</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE430</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR13</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE434</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR14</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE438</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NVIC_IPR15</name>
          <description>Sets or reads interrupt priorities</description>
          <addressOffset>0xE43C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_N3</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+3, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N2</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+2, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N1</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+1, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_N0</name>
              <description>For register NVIC_IPRn, the priority of interrupt number 4*n+0, or RES0 if the PE does not implement this interrupt</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUID</name>
          <description>Provides identification information for the PE, including an implementer code for the device and a device ID number</description>
          <addressOffset>0xED00</addressOffset>
          <resetValue>0x411FD210</resetValue>
          <fields>
            <field>
              <name>IMPLEMENTER</name>
              <description>This field must hold an implementer code that has been assigned by ARM</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VARIANT</name>
              <description>IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHITECTURE</name>
              <description>Defines the Architecture implemented by the PE</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PARTNO</name>
              <description>IMPLEMENTATION DEFINED primary part number for the device</description>
              <bitRange>[15:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REVISION</name>
              <description>IMPLEMENTATION DEFINED revision number for the device</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICSR</name>
          <description>Controls and provides status information for NMI, PendSV, SysTick and interrupts</description>
          <addressOffset>0xED04</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PENDNMISET</name>
              <description>Indicates whether the NMI exception is pending</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PENDNMICLR</name>
              <description>Allows the NMI exception pend state to be cleared</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PENDSVSET</name>
              <description>Indicates whether the PendSV `FTSSS exception is pending</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PENDSVCLR</name>
              <description>Allows the PendSV exception pend state to be cleared `FTSSS</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PENDSTSET</name>
              <description>Indicates whether the SysTick `FTSSS exception is pending</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PENDSTCLR</name>
              <description>Allows the SysTick exception pend state to be cleared `FTSSS</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STTNS</name>
              <description>Controls whether in a single SysTick implementation, the SysTick is Secure or Non-secure</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ISRPREEMPT</name>
              <description>Indicates whether a pending exception will be serviced on exit from debug halt state</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ISRPENDING</name>
              <description>Indicates whether an external interrupt, generated by the NVIC, is pending</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VECTPENDING</name>
              <description>The exception number of the highest priority pending and enabled interrupt</description>
              <bitRange>[20:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RETTOBASE</name>
              <description>In Handler mode, indicates whether there is more than one active exception</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VECTACTIVE</name>
              <description>The exception number of the current executing exception</description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VTOR</name>
          <description>The VTOR indicates the offset of the vector table base address from memory address 0x00000000.</description>
          <addressOffset>0xED08</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TBLOFF</name>
              <description>Vector table base offset field. It contains bits[31:7] of the offset of the table base from the bottom of the memory map.</description>
              <bitRange>[31:7]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AIRCR</name>
          <description>Use the Application Interrupt and Reset Control Register to: determine data endianness, clear all active state information from debug halt mode, request a system reset.</description>
          <addressOffset>0xED0C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>VECTKEY</name>
              <description>Register key: 
                            Reads as Unknown 
                            On writes, write 0x05FA to VECTKEY, otherwise the write is ignored.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDIANESS</name>
              <description>Data endianness implemented: 
                            0 = Little-endian.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRIS</name>
              <description>Prioritize Secure exceptions. The value of this bit defines whether Secure exception priority boosting is enabled. 
                            0	Priority ranges of Secure and Non-secure exceptions are identical. 
                            1	Non-secure exceptions are de-prioritized.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BFHFNMINS</name>
              <description>BusFault, HardFault, and NMI Non-secure enable. 
                            0	BusFault, HardFault, and NMI are Secure. 
                            1	BusFault and NMI are Non-secure and exceptions can target Non-secure HardFault.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRIGROUP</name>
              <description>Interrupt priority grouping field. This field determines the split of group priority from subpriority. 
                            See https://developer.arm.com/documentation/100235/0004/the-cortex-m33-peripherals/system-control-block/application-interrupt-and-reset-control-register?lang=en</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSRESETREQS</name>
              <description>System reset request, Secure state only. 
                            0	SYSRESETREQ functionality is available to both Security states. 
                            1 SYSRESETREQ functionality is only available to Secure state.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSRESETREQ</name>
              <description>Writing 1 to this bit causes the SYSRESETREQ signal to the outer system to be asserted to request a reset. The intention is to force a large system reset of all major components except for debug. The C_HALT bit in the DHCSR is cleared as a result of the system reset requested. The debugger does not lose contact with the device.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VECTCLRACTIVE</name>
              <description>Clears all active state information for fixed and configurable exceptions. This bit: is self-clearing, can only be set by the DAP when the core is halted.  When set: clears all active exception status of the processor, forces a return to Thread mode, forces an IPSR of 0. A debugger must re-initialize the stack.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR</name>
          <description>System Control Register. Use the System Control Register for power-management functions: signal to the system when the processor can enter a low power state, control how the processor enters and exits low power states.</description>
          <addressOffset>0xED10</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEVONPEND</name>
              <description>Send Event on Pending bit: 
                            0 = Only enabled interrupts or events can wakeup the processor, disabled interrupts are excluded. 
                            1 = Enabled events and all interrupts, including disabled interrupts, can wakeup the processor. 
                            When an event or interrupt becomes pending, the event signal wakes up the processor from WFE. If the 
                            processor is not waiting for an event, the event is registered and affects the next WFE. 
                            The processor also wakes up on execution of an SEV instruction or an external event.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SLEEPDEEPS</name>
              <description>0 SLEEPDEEP is available to both security states 
                            1 SLEEPDEEP is only available to Secure state</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SLEEPDEEP</name>
              <description>Controls whether the processor uses sleep or deep sleep as its low power mode: 
                            0 = Sleep. 
                            1 = Deep sleep.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SLEEPONEXIT</name>
              <description>Indicates sleep-on-exit when returning from Handler mode to Thread mode: 
                            0 = Do not sleep when returning to Thread mode. 
                            1 = Enter sleep, or deep sleep, on return from an ISR to Thread mode. 
                            Setting this bit to 1 enables an interrupt driven application to avoid returning to an empty main application.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR</name>
          <description>Sets or returns configuration and control data</description>
          <addressOffset>0xED14</addressOffset>
          <resetValue>0x00000201</resetValue>
          <fields>
            <field>
              <name>BP</name>
              <description>Enables program flow prediction `FTSSS</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IC</name>
              <description>This is a global enable bit for instruction caches in the selected Security state</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DC</name>
              <description>Enables data caching of all data accesses to Normal memory `FTSSS</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STKOFHFNMIGN</name>
              <description>Controls the effect of a stack limit violation while executing at a requested priority less than 0</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RES1</name>
              <description>Reserved, RES1</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BFHFNMIGN</name>
              <description>Determines the effect of precise BusFaults on handlers running at a requested priority less than 0</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIV_0_TRP</name>
              <description>Controls the generation of a DIVBYZERO UsageFault when attempting to perform integer division by zero</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNALIGN_TRP</name>
              <description>Controls the trapping of unaligned word or halfword accesses</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USERSETMPEND</name>
              <description>Determines whether unprivileged accesses are permitted to pend interrupts via the STIR</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RES1_1</name>
              <description>Reserved, RES1</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHPR1</name>
          <description>Sets or returns priority for system handlers 4 - 7</description>
          <addressOffset>0xED18</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_7_3</name>
              <description>Priority of system handler 7, SecureFault</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_6_3</name>
              <description>Priority of system handler 6, SecureFault</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_5_3</name>
              <description>Priority of system handler 5, SecureFault</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_4_3</name>
              <description>Priority of system handler 4, SecureFault</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHPR2</name>
          <description>Sets or returns priority for system handlers 8 - 11</description>
          <addressOffset>0xED1C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_11_3</name>
              <description>Priority of system handler 11, SecureFault</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_10</name>
              <description>Reserved, RES0</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRI_9</name>
              <description>Reserved, RES0</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRI_8</name>
              <description>Reserved, RES0</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHPR3</name>
          <description>Sets or returns priority for system handlers 12 - 15</description>
          <addressOffset>0xED20</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRI_15_3</name>
              <description>Priority of system handler 15, SecureFault</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_14_3</name>
              <description>Priority of system handler 14, SecureFault</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRI_13</name>
              <description>Reserved, RES0</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRI_12_3</name>
              <description>Priority of system handler 12, SecureFault</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHCSR</name>
          <description>Provides access to the active and pending status of system exceptions</description>
          <addressOffset>0xED24</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>HARDFAULTPENDED</name>
              <description>`IAAMO the pending state of the HardFault exception `CTTSSS</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECUREFAULTPENDED</name>
              <description>`IAAMO the pending state of the SecureFault exception</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECUREFAULTENA</name>
              <description>`DW the SecureFault exception is enabled</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USGFAULTENA</name>
              <description>`DW the UsageFault exception is enabled `FTSSS</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BUSFAULTENA</name>
              <description>`DW the BusFault exception is enabled</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MEMFAULTENA</name>
              <description>`DW the MemManage exception is enabled `FTSSS</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SVCALLPENDED</name>
              <description>`IAAMO the pending state of the SVCall exception `FTSSS</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BUSFAULTPENDED</name>
              <description>`IAAMO the pending state of the BusFault exception</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MEMFAULTPENDED</name>
              <description>`IAAMO the pending state of the MemManage exception `FTSSS</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USGFAULTPENDED</name>
              <description>The UsageFault exception is banked between Security states, `IAAMO the pending state of the UsageFault exception `FTSSS</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSTICKACT</name>
              <description>`IAAMO the active state of the SysTick exception `FTSSS</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PENDSVACT</name>
              <description>`IAAMO the active state of the PendSV exception `FTSSS</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MONITORACT</name>
              <description>`IAAMO the active state of the DebugMonitor exception</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SVCALLACT</name>
              <description>`IAAMO the active state of the SVCall exception `FTSSS</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NMIACT</name>
              <description>`IAAMO the active state of the NMI exception</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECUREFAULTACT</name>
              <description>`IAAMO the active state of the SecureFault exception</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USGFAULTACT</name>
              <description>`IAAMO the active state of the UsageFault exception `FTSSS</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HARDFAULTACT</name>
              <description>Indicates and allows limited modification of the active state of the HardFault exception `FTSSS</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BUSFAULTACT</name>
              <description>`IAAMO the active state of the BusFault exception</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MEMFAULTACT</name>
              <description>`IAAMO the active state of the MemManage exception `FTSSS</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFSR</name>
          <description>Contains the three Configurable Fault Status Registers.

                    31:16 UFSR: Provides information on UsageFault exceptions

                    15:8 BFSR: Provides information on BusFault exceptions

                    7:0 MMFSR: Provides information on MemManage exceptions</description>
          <addressOffset>0xED28</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>UFSR_DIVBYZERO</name>
              <description>Sticky flag indicating whether an integer division by zero error has occurred</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UFSR_UNALIGNED</name>
              <description>Sticky flag indicating whether an unaligned access error has occurred</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UFSR_STKOF</name>
              <description>Sticky flag indicating whether a stack overflow error has occurred</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UFSR_NOCP</name>
              <description>Sticky flag indicating whether a coprocessor disabled or not present error has occurred</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UFSR_INVPC</name>
              <description>Sticky flag indicating whether an integrity check error has occurred</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UFSR_INVSTATE</name>
              <description>Sticky flag indicating whether an EPSR.T or EPSR.IT validity error has occurred</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UFSR_UNDEFINSTR</name>
              <description>Sticky flag indicating whether an undefined instruction error has occurred</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BFSR_BFARVALID</name>
              <description>Indicates validity of the contents of the BFAR register</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BFSR_LSPERR</name>
              <description>Records whether a BusFault occurred during FP lazy state preservation</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BFSR_STKERR</name>
              <description>Records whether a derived BusFault occurred during exception entry stacking</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BFSR_UNSTKERR</name>
              <description>Records whether a derived BusFault occurred during exception return unstacking</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BFSR_IMPRECISERR</name>
              <description>Records whether an imprecise data access error has occurred</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BFSR_PRECISERR</name>
              <description>Records whether a precise data access error has occurred</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BFSR_IBUSERR</name>
              <description>Records whether a BusFault on an instruction prefetch has occurred</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MMFSR</name>
              <description>Provides information on MemManage exceptions</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HFSR</name>
          <description>Shows the cause of any HardFaults</description>
          <addressOffset>0xED2C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DEBUGEVT</name>
              <description>Indicates when a Debug event has occurred</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCED</name>
              <description>Indicates that a fault with configurable priority has been escalated to a HardFault exception, because it could not be made active, because of priority, or because it was disabled</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VECTTBL</name>
              <description>Indicates when a fault has occurred because of a vector table read error on exception processing</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DFSR</name>
          <description>Shows which debug event occurred</description>
          <addressOffset>0xED30</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>EXTERNAL</name>
              <description>Sticky flag indicating whether an External debug request debug event has occurred</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VCATCH</name>
              <description>Sticky flag indicating whether a Vector catch debug event has occurred</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DWTTRAP</name>
              <description>Sticky flag indicating whether a Watchpoint debug event has occurred</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BKPT</name>
              <description>Sticky flag indicating whether a Breakpoint debug event has occurred</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HALTED</name>
              <description>Sticky flag indicating that a Halt request debug event or Step debug event has occurred</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MMFAR</name>
          <description>Shows the address of the memory location that caused an MPU fault</description>
          <addressOffset>0xED34</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ADDRESS</name>
              <description>This register is updated with the address of a location that produced a MemManage fault. The MMFSR shows the cause of the fault, and whether this field is valid. This field is valid only when MMFSR.MMARVALID is set, otherwise it is UNKNOWN</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BFAR</name>
          <description>Shows the address associated with a precise data access BusFault</description>
          <addressOffset>0xED38</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ADDRESS</name>
              <description>This register is updated with the address of a location that produced a BusFault. The BFSR shows the reason for the fault. This field is valid only when BFSR.BFARVALID is set, otherwise it is UNKNOWN</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_PFR0</name>
          <description>Gives top-level information about the instruction set supported by the PE</description>
          <addressOffset>0xED40</addressOffset>
          <resetValue>0x00000030</resetValue>
          <fields>
            <field>
              <name>STATE1</name>
              <description>T32 instruction set support</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STATE0</name>
              <description>A32 instruction set support</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_PFR1</name>
          <description>Gives information about the programmers' model and Extensions support</description>
          <addressOffset>0xED44</addressOffset>
          <resetValue>0x00000520</resetValue>
          <fields>
            <field>
              <name>MPROGMOD</name>
              <description>Identifies support for the M-Profile programmers' model support</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURITY</name>
              <description>Identifies whether the Security Extension is implemented</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_DFR0</name>
          <description>Provides top level information about the debug system</description>
          <addressOffset>0xED48</addressOffset>
          <resetValue>0x00200000</resetValue>
          <fields>
            <field>
              <name>MPROFDBG</name>
              <description>Indicates the supported M-profile debug architecture</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_AFR0</name>
          <description>Provides information about the IMPLEMENTATION DEFINED features of the PE</description>
          <addressOffset>0xED4C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>IMPDEF3</name>
              <description>IMPLEMENTATION DEFINED meaning</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IMPDEF2</name>
              <description>IMPLEMENTATION DEFINED meaning</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IMPDEF1</name>
              <description>IMPLEMENTATION DEFINED meaning</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IMPDEF0</name>
              <description>IMPLEMENTATION DEFINED meaning</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_MMFR0</name>
          <description>Provides information about the implemented memory model and memory management support</description>
          <addressOffset>0xED50</addressOffset>
          <resetValue>0x00101F40</resetValue>
          <fields>
            <field>
              <name>AUXREG</name>
              <description>Indicates support for Auxiliary Control Registers</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TCM</name>
              <description>Indicates support for tightly coupled memories (TCMs)</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SHARELVL</name>
              <description>Indicates the number of shareability levels implemented</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTERSHR</name>
              <description>Indicates the outermost shareability domain implemented</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PMSA</name>
              <description>Indicates support for the protected memory system architecture (PMSA)</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_MMFR1</name>
          <description>Provides information about the implemented memory model and memory management support</description>
          <addressOffset>0xED54</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ID_MMFR1</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_MMFR2</name>
          <description>Provides information about the implemented memory model and memory management support</description>
          <addressOffset>0xED58</addressOffset>
          <resetValue>0x01000000</resetValue>
          <fields>
            <field>
              <name>WFISTALL</name>
              <description>Indicates the support for Wait For Interrupt (WFI) stalling</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_MMFR3</name>
          <description>Provides information about the implemented memory model and memory management support</description>
          <addressOffset>0xED5C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BPMAINT</name>
              <description>Indicates the supported branch predictor maintenance</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMAINTSW</name>
              <description>Indicates the supported cache maintenance operations by set/way</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMAINTVA</name>
              <description>Indicates the supported cache maintenance operations by address</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_ISAR0</name>
          <description>Provides information about the instruction set implemented by the PE</description>
          <addressOffset>0xED60</addressOffset>
          <resetValue>0x08092300</resetValue>
          <fields>
            <field>
              <name>DIVIDE</name>
              <description>Indicates the supported Divide instructions</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DEBUG</name>
              <description>Indicates the implemented Debug instructions</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>COPROC</name>
              <description>Indicates the supported Coprocessor instructions</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPBRANCH</name>
              <description>Indicates the supported combined Compare and Branch instructions</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BITFIELD</name>
              <description>Indicates the supported bit field instructions</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BITCOUNT</name>
              <description>Indicates the supported bit count instructions</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_ISAR1</name>
          <description>Provides information about the instruction set implemented by the PE</description>
          <addressOffset>0xED64</addressOffset>
          <resetValue>0x05725000</resetValue>
          <fields>
            <field>
              <name>INTERWORK</name>
              <description>Indicates the implemented Interworking instructions</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IMMEDIATE</name>
              <description>Indicates the implemented for data-processing instructions with long immediates</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IFTHEN</name>
              <description>Indicates the implemented If-Then instructions</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EXTEND</name>
              <description>Indicates the implemented Extend instructions</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_ISAR2</name>
          <description>Provides information about the instruction set implemented by the PE</description>
          <addressOffset>0xED68</addressOffset>
          <resetValue>0x30173426</resetValue>
          <fields>
            <field>
              <name>REVERSAL</name>
              <description>Indicates the implemented Reversal instructions</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MULTU</name>
              <description>Indicates the implemented advanced unsigned Multiply instructions</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MULTS</name>
              <description>Indicates the implemented advanced signed Multiply instructions</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MULT</name>
              <description>Indicates the implemented additional Multiply instructions</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MULTIACCESSINT</name>
              <description>Indicates the support for interruptible multi-access instructions</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MEMHINT</name>
              <description>Indicates the implemented Memory Hint instructions</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOADSTORE</name>
              <description>Indicates the implemented additional load/store instructions</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_ISAR3</name>
          <description>Provides information about the instruction set implemented by the PE</description>
          <addressOffset>0xED6C</addressOffset>
          <resetValue>0x07895729</resetValue>
          <fields>
            <field>
              <name>TRUENOP</name>
              <description>Indicates the implemented true NOP instructions</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>T32COPY</name>
              <description>Indicates the support for T32 non flag-setting MOV instructions</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TABBRANCH</name>
              <description>Indicates the implemented Table Branch instructions</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SYNCHPRIM</name>
              <description>Used in conjunction with ID_ISAR4.SynchPrim_frac to indicate the implemented Synchronization Primitive instructions</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SVC</name>
              <description>Indicates the implemented SVC instructions</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SIMD</name>
              <description>Indicates the implemented SIMD instructions</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SATURATE</name>
              <description>Indicates the implemented saturating instructions</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_ISAR4</name>
          <description>Provides information about the instruction set implemented by the PE</description>
          <addressOffset>0xED70</addressOffset>
          <resetValue>0x01310132</resetValue>
          <fields>
            <field>
              <name>PSR_M</name>
              <description>Indicates the implemented M profile instructions to modify the PSRs</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SYNCPRIM_FRAC</name>
              <description>Used in conjunction with ID_ISAR3.SynchPrim to indicate the implemented Synchronization Primitive instructions</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BARRIER</name>
              <description>Indicates the implemented Barrier instructions</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WRITEBACK</name>
              <description>Indicates the support for writeback addressing modes</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WITHSHIFTS</name>
              <description>Indicates the support for writeback addressing modes</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UNPRIV</name>
              <description>Indicates the implemented unprivileged instructions</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID_ISAR5</name>
          <description>Provides information about the instruction set implemented by the PE</description>
          <addressOffset>0xED74</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ID_ISAR5</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTR</name>
          <description>Provides information about the architecture of the caches. CTR is RES0 if CLIDR is zero.</description>
          <addressOffset>0xED7C</addressOffset>
          <resetValue>0x8000C000</resetValue>
          <fields>
            <field>
              <name>RES1</name>
              <description>Reserved, RES1</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CWG</name>
              <description>Log2 of the number of words of the maximum size of memory that can be overwritten as a result of the eviction of a cache entry that has had a memory location in it modified</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ERG</name>
              <description>Log2 of the number of words of the maximum size of the reservation granule that has been implemented for the Load-Exclusive and Store-Exclusive instructions</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMINLINE</name>
              <description>Log2 of the number of words in the smallest cache line of all the data caches and unified caches that are controlled by the PE</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RES1_1</name>
              <description>Reserved, RES1</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IMINLINE</name>
              <description>Log2 of the number of words in the smallest cache line of all the instruction caches that are controlled by the PE</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPACR</name>
          <description>Specifies the access privileges for coprocessors and the FP Extension</description>
          <addressOffset>0xED88</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CP11</name>
              <description>The value in this field is ignored. If the implementation does not include the FP Extension, this field is RAZ/WI. If the value of this bit is not programmed to the same value as the CP10 field, then the value is UNKNOWN</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP10</name>
              <description>Defines the access rights for the floating-point functionality</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP7</name>
              <description>Controls access privileges for coprocessor 7</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP6</name>
              <description>Controls access privileges for coprocessor 6</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP5</name>
              <description>Controls access privileges for coprocessor 5</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP4</name>
              <description>Controls access privileges for coprocessor 4</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP3</name>
              <description>Controls access privileges for coprocessor 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP2</name>
              <description>Controls access privileges for coprocessor 2</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP1</name>
              <description>Controls access privileges for coprocessor 1</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP0</name>
              <description>Controls access privileges for coprocessor 0</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NSACR</name>
          <description>Defines the Non-secure access permissions for both the FP Extension and coprocessors CP0 to CP7</description>
          <addressOffset>0xED8C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CP11</name>
              <description>Enables Non-secure access to the Floating-point Extension</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP10</name>
              <description>Enables Non-secure access to the Floating-point Extension</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP7</name>
              <description>Enables Non-secure access to coprocessor CP7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP6</name>
              <description>Enables Non-secure access to coprocessor CP6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP5</name>
              <description>Enables Non-secure access to coprocessor CP5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP4</name>
              <description>Enables Non-secure access to coprocessor CP4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP3</name>
              <description>Enables Non-secure access to coprocessor CP3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP2</name>
              <description>Enables Non-secure access to coprocessor CP2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP1</name>
              <description>Enables Non-secure access to coprocessor CP1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP0</name>
              <description>Enables Non-secure access to coprocessor CP0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_TYPE</name>
          <description>The MPU Type Register indicates how many regions the MPU `FTSSS supports</description>
          <addressOffset>0xED90</addressOffset>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>DREGION</name>
              <description>Number of regions supported by the MPU</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SEPARATE</name>
              <description>Indicates support for separate instructions and data address regions</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_CTRL</name>
          <description>Enables the MPU and, when the MPU is enabled, controls whether the default memory map is enabled as a background region for privileged accesses, and whether the MPU is enabled for HardFaults, NMIs, and exception handlers when FAULTMASK is set to 1</description>
          <addressOffset>0xED94</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PRIVDEFENA</name>
              <description>Controls whether the default memory map is enabled for privileged software</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HFNMIENA</name>
              <description>Controls whether handlers executing with priority less than 0 access memory with the MPU enabled or disabled. This applies to HardFaults, NMIs, and exception handlers when FAULTMASK is set to 1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>Enables the MPU</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RNR</name>
          <description>Selects the region currently accessed by MPU_RBAR and MPU_RLAR</description>
          <addressOffset>0xED98</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>REGION</name>
              <description>Indicates the memory region accessed by MPU_RBAR and MPU_RLAR</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RBAR</name>
          <description>Provides indirect read and write access to the base address of the currently selected MPU region `FTSSS</description>
          <addressOffset>0xED9C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BASE</name>
              <description>Contains bits [31:5] of the lower inclusive limit of the selected MPU memory region. This value is zero extended to provide the base address to be checked against</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SH</name>
              <description>Defines the Shareability domain of this region for Normal memory</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AP</name>
              <description>Defines the access permissions for this region</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XN</name>
              <description>Defines whether code can be executed from this region</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RLAR</name>
          <description>Provides indirect read and write access to the limit address of the currently selected MPU region `FTSSS</description>
          <addressOffset>0xEDA0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LIMIT</name>
              <description>Contains bits [31:5] of the upper inclusive limit of the selected MPU memory region. This value is postfixed with 0x1F to provide the limit address to be checked against</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTRINDX</name>
              <description>Associates a set of attributes in the MPU_MAIR0 and MPU_MAIR1 fields</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description>Region enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RBAR_A1</name>
          <description>Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(1[1:0]) `FTSSS</description>
          <addressOffset>0xEDA4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BASE</name>
              <description>Contains bits [31:5] of the lower inclusive limit of the selected MPU memory region. This value is zero extended to provide the base address to be checked against</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SH</name>
              <description>Defines the Shareability domain of this region for Normal memory</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AP</name>
              <description>Defines the access permissions for this region</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XN</name>
              <description>Defines whether code can be executed from this region</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RLAR_A1</name>
          <description>Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(1[1:0]) `FTSSS</description>
          <addressOffset>0xEDA8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LIMIT</name>
              <description>Contains bits [31:5] of the upper inclusive limit of the selected MPU memory region. This value is postfixed with 0x1F to provide the limit address to be checked against</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTRINDX</name>
              <description>Associates a set of attributes in the MPU_MAIR0 and MPU_MAIR1 fields</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description>Region enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RBAR_A2</name>
          <description>Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(2[1:0]) `FTSSS</description>
          <addressOffset>0xEDAC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BASE</name>
              <description>Contains bits [31:5] of the lower inclusive limit of the selected MPU memory region. This value is zero extended to provide the base address to be checked against</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SH</name>
              <description>Defines the Shareability domain of this region for Normal memory</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AP</name>
              <description>Defines the access permissions for this region</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XN</name>
              <description>Defines whether code can be executed from this region</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RLAR_A2</name>
          <description>Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(2[1:0]) `FTSSS</description>
          <addressOffset>0xEDB0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LIMIT</name>
              <description>Contains bits [31:5] of the upper inclusive limit of the selected MPU memory region. This value is postfixed with 0x1F to provide the limit address to be checked against</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTRINDX</name>
              <description>Associates a set of attributes in the MPU_MAIR0 and MPU_MAIR1 fields</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description>Region enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RBAR_A3</name>
          <description>Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(3[1:0]) `FTSSS</description>
          <addressOffset>0xEDB4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BASE</name>
              <description>Contains bits [31:5] of the lower inclusive limit of the selected MPU memory region. This value is zero extended to provide the base address to be checked against</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SH</name>
              <description>Defines the Shareability domain of this region for Normal memory</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AP</name>
              <description>Defines the access permissions for this region</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XN</name>
              <description>Defines whether code can be executed from this region</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_RLAR_A3</name>
          <description>Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(3[1:0]) `FTSSS</description>
          <addressOffset>0xEDB8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LIMIT</name>
              <description>Contains bits [31:5] of the upper inclusive limit of the selected MPU memory region. This value is postfixed with 0x1F to provide the limit address to be checked against</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTRINDX</name>
              <description>Associates a set of attributes in the MPU_MAIR0 and MPU_MAIR1 fields</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description>Region enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_MAIR0</name>
          <description>Along with MPU_MAIR1, provides the memory attribute encodings corresponding to the AttrIndex values</description>
          <addressOffset>0xEDC0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ATTR3</name>
              <description>Memory attribute encoding for MPU regions with an AttrIndex of 3</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>Memory attribute encoding for MPU regions with an AttrIndex of 2</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR1</name>
              <description>Memory attribute encoding for MPU regions with an AttrIndex of 1</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR0</name>
              <description>Memory attribute encoding for MPU regions with an AttrIndex of 0</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MPU_MAIR1</name>
          <description>Along with MPU_MAIR0, provides the memory attribute encodings corresponding to the AttrIndex values</description>
          <addressOffset>0xEDC4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ATTR7</name>
              <description>Memory attribute encoding for MPU regions with an AttrIndex of 7</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR6</name>
              <description>Memory attribute encoding for MPU regions with an AttrIndex of 6</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR5</name>
              <description>Memory attribute encoding for MPU regions with an AttrIndex of 5</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR4</name>
              <description>Memory attribute encoding for MPU regions with an AttrIndex of 4</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAU_CTRL</name>
          <description>Allows enabling of the Security Attribution Unit</description>
          <addressOffset>0xEDD0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ALLNS</name>
              <description>When SAU_CTRL.ENABLE is 0 this bit controls if the memory is marked as Non-secure or Secure</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>Enables the SAU</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAU_TYPE</name>
          <description>Indicates the number of regions implemented by the Security Attribution Unit</description>
          <addressOffset>0xEDD4</addressOffset>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>SREGION</name>
              <description>The number of implemented SAU regions</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAU_RNR</name>
          <description>Selects the region currently accessed by SAU_RBAR and SAU_RLAR</description>
          <addressOffset>0xEDD8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>REGION</name>
              <description>Indicates the SAU region accessed by SAU_RBAR and SAU_RLAR</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAU_RBAR</name>
          <description>Provides indirect read and write access to the base address of the currently selected SAU region</description>
          <addressOffset>0xEDDC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BADDR</name>
              <description>Holds bits [31:5] of the base address for the selected SAU region</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAU_RLAR</name>
          <description>Provides indirect read and write access to the limit address of the currently selected SAU region</description>
          <addressOffset>0xEDE0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LADDR</name>
              <description>Holds bits [31:5] of the limit address for the selected SAU region</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NSC</name>
              <description>Controls whether Non-secure state is permitted to execute an SG instruction from this region</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>SAU region enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SFSR</name>
          <description>Provides information about any security related faults</description>
          <addressOffset>0xEDE4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LSERR</name>
              <description>Sticky flag indicating that an error occurred during lazy state activation or deactivation</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SFARVALID</name>
              <description>This bit is set when the SFAR register contains a valid value. As with similar fields, such as BFSR.BFARVALID and MMFSR.MMARVALID, this bit can be cleared by other exceptions, such as BusFault</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LSPERR</name>
              <description>Stick flag indicating that an SAU or IDAU violation occurred during the lazy preservation of floating-point state</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INVTRAN</name>
              <description>Sticky flag indicating that an exception was raised due to a branch that was not flagged as being domain crossing causing a transition from Secure to Non-secure memory</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUVIOL</name>
              <description>Sticky flag indicating that an attempt was made to access parts of the address space that are marked as Secure with NS-Req for the transaction set to Non-secure. This bit is not set if the violation occurred during lazy state preservation. See LSPERR</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INVER</name>
              <description>This can be caused by EXC_RETURN.DCRS being set to 0 when returning from an exception in the Non-secure state, or by EXC_RETURN.ES being set to 1 when returning from an exception in the Non-secure state</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INVIS</name>
              <description>This bit is set if the integrity signature in an exception stack frame is found to be invalid during the unstacking operation</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INVEP</name>
              <description>This bit is set if a function call from the Non-secure state or exception targets a non-SG instruction in the Secure state. This bit is also set if the target address is a SG instruction, but there is no matching SAU/IDAU region with the NSC flag set</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SFAR</name>
          <description>Shows the address of the memory location that caused a Security violation</description>
          <addressOffset>0xEDE8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ADDRESS</name>
              <description>The address of an access that caused a attribution unit violation. This field is only valid when SFSR.SFARVALID is set. This allows the actual flip flops associated with this register to be shared with other fault address registers. If an implementation chooses to share the storage in this way, care must be taken to not leak Secure address information to the Non-secure state. One way of achieving this is to share the SFAR register with the MMFAR_S register, which is not accessible to the Non-secure state</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DHCSR</name>
          <description>Controls halting debug</description>
          <addressOffset>0xEDF0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>S_RESTART_ST</name>
              <description>Indicates the PE has processed a request to clear DHCSR.C_HALT to 0. That is, either a write to DHCSR that clears DHCSR.C_HALT from 1 to 0, or an External Restart Request</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_RESET_ST</name>
              <description>Indicates whether the PE has been reset since the last read of the DHCSR</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_RETIRE_ST</name>
              <description>Set to 1 every time the PE retires one of more instructions</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_SDE</name>
              <description>Indicates whether Secure invasive debug is allowed</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_LOCKUP</name>
              <description>Indicates whether the PE is in Lockup state</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_SLEEP</name>
              <description>Indicates whether the PE is sleeping</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_HALT</name>
              <description>Indicates whether the PE is in Debug state</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_REGRDY</name>
              <description>Handshake flag to transfers through the DCRDR</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>C_SNAPSTALL</name>
              <description>Allow imprecise entry to Debug state</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_MASKINTS</name>
              <description>When debug is enabled, the debugger can write to this bit to mask PendSV, SysTick and external configurable interrupts</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_STEP</name>
              <description>Enable single instruction step</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_HALT</name>
              <description>PE enter Debug state halt request</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_DEBUGEN</name>
              <description>Enable Halting debug</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCRSR</name>
          <description>With the DCRDR, provides debug access to the general-purpose registers, special-purpose registers, and the FP extension registers. A write to the DCRSR specifies the register to transfer, whether the transfer is a read or write, and starts the transfer</description>
          <addressOffset>0xEDF4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>REGWNR</name>
              <description>Specifies the access type for the transfer</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REGSEL</name>
              <description>Specifies the general-purpose register, special-purpose register, or FP register to transfer</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCRDR</name>
          <description>With the DCRSR, provides debug access to the general-purpose registers, special-purpose registers, and the FP Extension registers. If the Main Extension is implemented, it can also be used for message passing between an external debugger and a debug agent running on the PE</description>
          <addressOffset>0xEDF8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DBGTMP</name>
              <description>Provides debug access for reading and writing the general-purpose registers, special-purpose registers, and Floating-point Extension registers</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEMCR</name>
          <description>Manages vector catch behavior and DebugMonitor handling when debugging</description>
          <addressOffset>0xEDFC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRCENA</name>
              <description>Global enable for all DWT and ITM features</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDME</name>
              <description>Indicates whether the DebugMonitor targets the Secure or the Non-secure state and whether debug events are allowed in Secure state</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MON_REQ</name>
              <description>DebugMonitor semaphore bit</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MON_STEP</name>
              <description>Enable DebugMonitor stepping</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MON_PEND</name>
              <description>Sets or clears the pending state of the DebugMonitor exception</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MON_EN</name>
              <description>Enable the DebugMonitor exception</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_SFERR</name>
              <description>SecureFault exception halting debug vector catch enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_HARDERR</name>
              <description>HardFault exception halting debug vector catch enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_INTERR</name>
              <description>Enable halting debug vector catch for faults during exception entry and return</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_BUSERR</name>
              <description>BusFault exception halting debug vector catch enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_STATERR</name>
              <description>Enable halting debug trap on a UsageFault exception caused by a state information error, for example an Undefined Instruction exception</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_CHKERR</name>
              <description>Enable halting debug trap on a UsageFault exception caused by a checking error, for example an alignment check error</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_NOCPERR</name>
              <description>Enable halting debug trap on a UsageFault caused by an access to a coprocessor</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_MMERR</name>
              <description>Enable halting debug trap on a MemManage exception</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_CORERESET</name>
              <description>Enable Reset Vector Catch. This causes a warm reset to halt a running system</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DSCSR</name>
          <description>Provides control and status information for Secure debug</description>
          <addressOffset>0xEE08</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CDSKEY</name>
              <description>Writes to the CDS bit are ignored unless CDSKEY is concurrently written to zero</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CDS</name>
              <description>This field indicates the current Security state of the processor</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SBRSEL</name>
              <description>If SBRSELEN is 1 this bit selects whether the Non-secure or the Secure version of the memory-mapped Banked registers are accessible to the debugger</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SBRSELEN</name>
              <description>Controls whether the SBRSEL field or the current Security state of the processor selects which version of the memory-mapped Banked registers are accessed to the debugger</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STIR</name>
          <description>Provides a mechanism for software to generate an interrupt</description>
          <addressOffset>0xEF00</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>INTID</name>
              <description>Indicates the interrupt to be pended. The value written is (ExceptionNumber - 16)</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FPCCR</name>
          <description>Holds control data for the Floating-point extension</description>
          <addressOffset>0xEF34</addressOffset>
          <resetValue>0x20000472</resetValue>
          <fields>
            <field>
              <name>ASPEN</name>
              <description>When this bit is set to 1, execution of a floating-point instruction sets the CONTROL.FPCA bit to 1</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LSPEN</name>
              <description>Enables lazy context save of floating-point state</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LSPENS</name>
              <description>This bit controls whether the LSPEN bit is writeable from the Non-secure state</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLRONRET</name>
              <description>Clear floating-point caller saved registers on exception return</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLRONRETS</name>
              <description>This bit controls whether the CLRONRET bit is writeable from the Non-secure state</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TS</name>
              <description>Treat floating-point registers as Secure enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UFRDY</name>
              <description>Indicates whether the software executing when the PE allocated the floating-point stack frame was able to set the UsageFault exception to pending</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPLIMVIOL</name>
              <description>This bit is banked between the Security states and indicates whether the floating-point context violates the stack pointer limit that was active when lazy state preservation was activated. SPLIMVIOL modifies the lazy floating-point state preservation behavior</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MONRDY</name>
              <description>Indicates whether the software executing when the PE allocated the floating-point stack frame was able to set the DebugMonitor exception to pending</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SFRDY</name>
              <description>Indicates whether the software executing when the PE allocated the floating-point stack frame was able to set the SecureFault exception to pending. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BFRDY</name>
              <description>Indicates whether the software executing when the PE allocated the floating-point stack frame was able to set the BusFault exception to pending</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MMRDY</name>
              <description>Indicates whether the software executing when the PE allocated the floating-point stack frame was able to set the MemManage exception to pending</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HFRDY</name>
              <description>Indicates whether the software executing when the PE allocated the floating-point stack frame was able to set the HardFault exception to pending</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THREAD</name>
              <description>Indicates the PE mode when it allocated the floating-point stack frame</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S</name>
              <description>Security status of the floating-point context. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state. This bit is updated whenever lazy state preservation is activated, or when a floating-point instruction is executed</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USER</name>
              <description>Indicates the privilege level of the software executing when the PE allocated the floating-point stack frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LSPACT</name>
              <description>Indicates whether lazy preservation of the floating-point state is active</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FPCAR</name>
          <description>Holds the location of the unpopulated floating-point register space allocated on an exception stack frame</description>
          <addressOffset>0xEF38</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ADDRESS</name>
              <description>The location of the unpopulated floating-point register space allocated on an exception stack frame</description>
              <bitRange>[31:3]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FPDSCR</name>
          <description>Holds the default values for the floating-point status control data that the PE assigns to the FPSCR when it creates a new floating-point context</description>
          <addressOffset>0xEF3C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AHP</name>
              <description>Default value for FPSCR.AHP</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DN</name>
              <description>Default value for FPSCR.DN</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FZ</name>
              <description>Default value for FPSCR.FZ</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RMODE</name>
              <description>Default value for FPSCR.RMode</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MVFR0</name>
          <description>Describes the features provided by the Floating-point Extension</description>
          <addressOffset>0xEF40</addressOffset>
          <resetValue>0x60540601</resetValue>
          <fields>
            <field>
              <name>FPROUND</name>
              <description>Indicates the rounding modes supported by the FP Extension</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPSQRT</name>
              <description>Indicates the support for FP square root operations</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPDIVIDE</name>
              <description>Indicates the support for FP divide operations</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPDP</name>
              <description>Indicates support for FP double-precision operations</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPSP</name>
              <description>Indicates support for FP single-precision operations</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SIMDREG</name>
              <description>Indicates size of FP register file</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MVFR1</name>
          <description>Describes the features provided by the Floating-point Extension</description>
          <addressOffset>0xEF44</addressOffset>
          <resetValue>0x85000089</resetValue>
          <fields>
            <field>
              <name>FMAC</name>
              <description>Indicates whether the FP Extension implements the fused multiply accumulate instructions</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPHP</name>
              <description>Indicates whether the FP Extension implements half-precision FP conversion instructions</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPDNAN</name>
              <description>Indicates whether the FP hardware implementation supports NaN propagation</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPFTZ</name>
              <description>Indicates whether subnormals are always flushed-to-zero</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MVFR2</name>
          <description>Describes the features provided by the Floating-point Extension</description>
          <addressOffset>0xEF48</addressOffset>
          <resetValue>0x00000060</resetValue>
          <fields>
            <field>
              <name>FPMISC</name>
              <description>Indicates support for miscellaneous FP features</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DDEVARCH</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFBC</addressOffset>
          <resetValue>0x47702A04</resetValue>
          <fields>
            <field>
              <name>ARCHITECT</name>
              <description>Defines the architect of the component. Bits [31:28] are the JEP106 continuation code (JEP106 bank ID, minus 1) and bits [27:21] are the JEP106 ID code.</description>
              <bitRange>[31:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRESENT</name>
              <description>Defines that the DEVARCH register is present</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REVISION</name>
              <description>Defines the architecture revision of the component</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHVER</name>
              <description>Defines the architecture version of the component</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHPART</name>
              <description>Defines the architecture of the component</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DDEVTYPE</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFCC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SUB</name>
              <description>Component sub-type</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR</name>
              <description>CoreSight major type</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DPIDR4</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFD0</addressOffset>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>SIZE</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_2</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DPIDR5</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFD4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DPIDR5</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DPIDR6</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFD8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DPIDR6</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DPIDR7</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFDC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DPIDR7</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DPIDR0</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFE0</addressOffset>
          <resetValue>0x00000021</resetValue>
          <fields>
            <field>
              <name>PART_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DPIDR1</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFE4</addressOffset>
          <resetValue>0x000000BD</resetValue>
          <fields>
            <field>
              <name>DES_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PART_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DPIDR2</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFE8</addressOffset>
          <resetValue>0x0000000B</resetValue>
          <fields>
            <field>
              <name>REVISION</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>JEDEC</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DPIDR3</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFEC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>REVAND</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMOD</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCIDR0</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFF0</addressOffset>
          <resetValue>0x0000000D</resetValue>
          <fields>
            <field>
              <name>PRMBL_0</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCIDR1</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFF4</addressOffset>
          <resetValue>0x00000090</resetValue>
          <fields>
            <field>
              <name>CLASS</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRMBL_1</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCIDR2</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFF8</addressOffset>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>PRMBL_2</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCIDR3</name>
          <description>Provides CoreSight discovery information for the SCS</description>
          <addressOffset>0xEFFC</addressOffset>
          <resetValue>0x000000B1</resetValue>
          <fields>
            <field>
              <name>PRMBL_3</name>
              <description>See CoreSight Architecture Specification</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPRGCTLR</name>
          <description>Programming Control Register</description>
          <addressOffset>0x41004</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>EN</name>
              <description>Trace Unit Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCSTATR</name>
          <description>The TRCSTATR indicates the ETM-Teal status</description>
          <addressOffset>0x4100C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PMSTABLE</name>
              <description>Indicates whether the ETM-Teal registers are stable and can be read</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IDLE</name>
              <description>Indicates that the trace unit is inactive</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCCONFIGR</name>
          <description>The TRCCONFIGR sets the basic tracing options for the trace unit</description>
          <addressOffset>0x41010</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RS</name>
              <description>Return stack enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TS</name>
              <description>Global timestamp tracing</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COND</name>
              <description>Conditional instruction tracing</description>
              <bitRange>[10:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCI</name>
              <description>Cycle counting in instruction trace</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB</name>
              <description>Branch broadcast mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCEVENTCTL0R</name>
          <description>The TRCEVENTCTL0R controls the tracing of events in the trace stream. The events also drive the ETM-Teal external outputs.</description>
          <addressOffset>0x41020</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TYPE1</name>
              <description>Selects the resource type for event 1</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL1</name>
              <description>Selects the resource number, based on the value of TYPE1: When TYPE1 is 0, selects a single selected resource from 0-15 defined by SEL1[2:0].  When TYPE1 is 1, selects a Boolean combined resource pair from 0-7 defined by SEL1[2:0]</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TYPE0</name>
              <description>Selects the resource type for event 0</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL0</name>
              <description>Selects the resource number, based on the value of TYPE0: When TYPE1 is 0, selects a single selected resource from 0-15 defined by SEL0[2:0].  When TYPE1 is 1, selects a Boolean combined resource pair from 0-7 defined by SEL0[2:0]</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCEVENTCTL1R</name>
          <description>The TRCEVENTCTL1R controls how the events selected by TRCEVENTCTL0R behave</description>
          <addressOffset>0x41024</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LPOVERRIDE</name>
              <description>Low power state behavior override</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATB</name>
              <description>ATB enabled</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTEN1</name>
              <description>One bit per event, to enable generation of an event element in the instruction trace stream when the selected event occurs</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTEN0</name>
              <description>One bit per event, to enable generation of an event element in the instruction trace stream when the selected event occurs</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCSTALLCTLR</name>
          <description>The TRCSTALLCTLR enables ETM-Teal to stall the processor if the ETM-Teal FIFO goes over the programmed level to minimize risk of overflow</description>
          <addressOffset>0x4102C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>INSTPRIORITY</name>
              <description>Reserved, RES0</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ISTALL</name>
              <description>Stall processor based on instruction trace buffer space</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEVEL</name>
              <description>Threshold at which stalling becomes active. This provides four levels. This level can be varied to optimize the level of invasion caused by stalling, balanced against the risk of a FIFO overflow</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCTSCTLR</name>
          <description>The TRCTSCTLR controls the insertion of global timestamps into the trace stream. A timestamp is always inserted into the instruction trace stream</description>
          <addressOffset>0x41030</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TYPE0</name>
              <description>Selects the resource type for event 0</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL0</name>
              <description>Selects the resource number, based on the value of TYPE0: When TYPE1 is 0, selects a single selected resource from 0-15 defined by SEL0[2:0].  When TYPE1 is 1, selects a Boolean combined resource pair from 0-7 defined by SEL0[2:0]</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCSYNCPR</name>
          <description>The TRCSYNCPR specifies the period of trace synchronization of the trace streams. TRCSYNCPR defines a number of bytes of trace between requests for trace synchronization. This value is always a power of two</description>
          <addressOffset>0x41034</addressOffset>
          <resetValue>0x0000000A</resetValue>
          <fields>
            <field>
              <name>PERIOD</name>
              <description>Defines the number of bytes of trace between trace synchronization requests as a total of the number of bytes generated by the instruction stream. The number of bytes is 2N where N is the value of this field: - A value of zero disables these periodic trace synchronization requests, but does not disable other trace synchronization requests.  - The minimum value that can be programmed, other than zero, is 8, providing a minimum trace synchronization period of 256 bytes.  - The maximum value is 20, providing a maximum trace synchronization period of 2^20 bytes</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCCCCTLR</name>
          <description>The TRCCCCTLR sets the threshold value for instruction trace cycle counting. The threshold represents the minimum interval between cycle count trace packets</description>
          <addressOffset>0x41038</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>THRESHOLD</name>
              <description>Instruction trace cycle count threshold</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCVICTLR</name>
          <description>The TRCVICTLR controls instruction trace filtering</description>
          <addressOffset>0x41080</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>EXLEVEL_S3</name>
              <description>In Secure state, each bit controls whether instruction tracing is enabled for the corresponding exception level</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXLEVEL_S0</name>
              <description>In Secure state, each bit controls whether instruction tracing is enabled for the corresponding exception level</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRCERR</name>
              <description>Selects whether a system error exception must always be traced</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRCRESET</name>
              <description>Selects whether a reset exception must always be traced</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SSSTATUS</name>
              <description>Indicates the current status of the start/stop logic</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TYPE0</name>
              <description>Selects the resource type for event 0</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL0</name>
              <description>Selects the resource number, based on the value of TYPE0: When TYPE1 is 0, selects a single selected resource from 0-15 defined by SEL0[2:0].  When TYPE1 is 1, selects a Boolean combined resource pair from 0-7 defined by SEL0[2:0]</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCCNTRLDVR0</name>
          <description>The TRCCNTRLDVR defines the reload value for the reduced function counter</description>
          <addressOffset>0x41140</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>VALUE</name>
              <description>Defines the reload value for the counter. This value is loaded into the counter each time the reload event occurs</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR8</name>
          <description>TRCIDR8</description>
          <addressOffset>0x41180</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>MAXSPEC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR9</name>
          <description>TRCIDR9</description>
          <addressOffset>0x41184</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>NUMP0KEY</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR10</name>
          <description>TRCIDR10</description>
          <addressOffset>0x41188</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>NUMP1KEY</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR11</name>
          <description>TRCIDR11</description>
          <addressOffset>0x4118C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>NUMP1SPC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR12</name>
          <description>TRCIDR12</description>
          <addressOffset>0x41190</addressOffset>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>NUMCONDKEY</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR13</name>
          <description>TRCIDR13</description>
          <addressOffset>0x41194</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>NUMCONDSPC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIMSPEC</name>
          <description>The TRCIMSPEC shows the presence of any IMPLEMENTATION SPECIFIC features, and enables any features that are provided</description>
          <addressOffset>0x411C0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SUPPORT</name>
              <description>Reserved, RES0</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR0</name>
          <description>TRCIDR0</description>
          <addressOffset>0x411E0</addressOffset>
          <resetValue>0x280006E1</resetValue>
          <fields>
            <field>
              <name>COMMOPT</name>
              <description>reads as `ImpDef</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSSIZE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[28:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRCEXDATA</name>
              <description>reads as `ImpDef</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>QSUPP</name>
              <description>reads as `ImpDef</description>
              <bitRange>[16:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>QFILT</name>
              <description>reads as `ImpDef</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CONDTYPE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[13:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMEVENT</name>
              <description>reads as `ImpDef</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RETSTACK</name>
              <description>reads as `ImpDef</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRCCCI</name>
              <description>reads as `ImpDef</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRCCOND</name>
              <description>reads as `ImpDef</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRCBB</name>
              <description>reads as `ImpDef</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRCDATA</name>
              <description>reads as `ImpDef</description>
              <bitRange>[4:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INSTP0</name>
              <description>reads as `ImpDef</description>
              <bitRange>[2:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RES1</name>
              <description>Reserved, RES1</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR1</name>
          <description>TRCIDR1</description>
          <addressOffset>0x411E4</addressOffset>
          <resetValue>0x4100F421</resetValue>
          <fields>
            <field>
              <name>DESIGNER</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RES1</name>
              <description>Reserved, RES1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRCARCHMAJ</name>
              <description>reads as 0b0100</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRCARCHMIN</name>
              <description>reads as 0b0000</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REVISION</name>
              <description>reads as `ImpDef</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR2</name>
          <description>TRCIDR2</description>
          <addressOffset>0x411E8</addressOffset>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>CCSIZE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[28:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DVSIZE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[24:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DASIZE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[19:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VMIDSIZE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[14:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CIDSIZE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[9:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IASIZE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR3</name>
          <description>TRCIDR3</description>
          <addressOffset>0x411EC</addressOffset>
          <resetValue>0x0F090004</resetValue>
          <fields>
            <field>
              <name>NOOVERFLOW</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMPROC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[30:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SYSSTALL</name>
              <description>reads as `ImpDef</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STALLCTL</name>
              <description>reads as `ImpDef</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SYNCPR</name>
              <description>reads as `ImpDef</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRCERR</name>
              <description>reads as `ImpDef</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EXLEVEL_NS</name>
              <description>reads as `ImpDef</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EXLEVEL_S</name>
              <description>reads as `ImpDef</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CCITMIN</name>
              <description>reads as `ImpDef</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR4</name>
          <description>TRCIDR4</description>
          <addressOffset>0x411F0</addressOffset>
          <resetValue>0x00114000</resetValue>
          <fields>
            <field>
              <name>NUMVMIDC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMCIDC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMSSCC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMRSPAIR</name>
              <description>reads as `ImpDef</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMPC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SUPPDAC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMDVC</name>
              <description>reads as `ImpDef</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMACPAIRS</name>
              <description>reads as `ImpDef</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR5</name>
          <description>TRCIDR5</description>
          <addressOffset>0x411F4</addressOffset>
          <resetValue>0x90C70004</resetValue>
          <fields>
            <field>
              <name>REDFUNCNTR</name>
              <description>reads as `ImpDef</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMCNTR</name>
              <description>reads as `ImpDef</description>
              <bitRange>[30:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMSEQSTATE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[27:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LPOVERRIDE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ATBTRIG</name>
              <description>reads as `ImpDef</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRACEIDSIZE</name>
              <description>reads as 0x07</description>
              <bitRange>[21:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMEXTINSEL</name>
              <description>reads as `ImpDef</description>
              <bitRange>[11:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMEXTIN</name>
              <description>reads as `ImpDef</description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR6</name>
          <description>TRCIDR6</description>
          <addressOffset>0x411F8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRCIDR6</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCIDR7</name>
          <description>TRCIDR7</description>
          <addressOffset>0x411FC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRCIDR7</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCRSCTLR2</name>
          <description>The TRCRSCTLR controls the trace resources</description>
          <addressOffset>0x41208</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PAIRINV</name>
              <description>Inverts the result of a combined pair of resources.  This bit is only implemented on the lower register for a pair of resource selectors</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INV</name>
              <description>Inverts the selected resources</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GROUP</name>
              <description>Selects a group of resource</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SELECT</name>
              <description>Selects one or more resources from the wanted group. One bit is provided per resource from the group</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCRSCTLR3</name>
          <description>The TRCRSCTLR controls the trace resources</description>
          <addressOffset>0x4120C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PAIRINV</name>
              <description>Inverts the result of a combined pair of resources.  This bit is only implemented on the lower register for a pair of resource selectors</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INV</name>
              <description>Inverts the selected resources</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GROUP</name>
              <description>Selects a group of resource</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SELECT</name>
              <description>Selects one or more resources from the wanted group. One bit is provided per resource from the group</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCSSCSR</name>
          <description>Controls the corresponding single-shot comparator resource</description>
          <addressOffset>0x412A0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>STATUS</name>
              <description>Single-shot status bit. Indicates if any of the comparators, that TRCSSCCRn.SAC or TRCSSCCRn.ARC selects, have matched</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC</name>
              <description>Reserved, RES1</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DV</name>
              <description>Reserved, RES0</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DA</name>
              <description>Reserved, RES0</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INST</name>
              <description>Reserved, RES0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCSSPCICR</name>
          <description>Selects the PE comparator inputs for Single-shot control</description>
          <addressOffset>0x412C0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PC</name>
              <description>Selects one or more PE comparator inputs for Single-shot control.  TRCIDR4.NUMPC defines the size of the PC field.  1 bit is provided for each implemented PE comparator input.  For example, if bit[1] == 1 this selects PE comparator input 1 for Single-shot control</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPDCR</name>
          <description>Requests the system to provide power to the trace unit</description>
          <addressOffset>0x41310</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PU</name>
              <description>Powerup request bit:</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPDSR</name>
          <description>Returns the following information about the trace unit: - OS Lock status.  - Core power domain status.  - Power interruption status</description>
          <addressOffset>0x41314</addressOffset>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>OSLK</name>
              <description>OS Lock status bit:</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STICKYPD</name>
              <description>Sticky powerdown status bit. Indicates whether the trace register state is valid:</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>POWER</name>
              <description>Power status bit:</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCITATBIDR</name>
          <description>Trace Integration ATB Identification Register</description>
          <addressOffset>0x41EE4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ID</name>
              <description>Trace ID</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCITIATBINR</name>
          <description>Trace Integration Instruction ATB In Register</description>
          <addressOffset>0x41EF4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AFVALIDM</name>
              <description>Integration Mode instruction AFVALIDM in</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATREADYM</name>
              <description>Integration Mode instruction ATREADYM in</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCITIATBOUTR</name>
          <description>Trace Integration Instruction ATB Out Register</description>
          <addressOffset>0x41EFC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AFREADY</name>
              <description>Integration Mode instruction AFREADY out</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATVALID</name>
              <description>Integration Mode instruction ATVALID out</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCCLAIMSET</name>
          <description>Claim Tag Set Register</description>
          <addressOffset>0x41FA0</addressOffset>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>SET3</name>
              <description>When a write to one of these bits occurs, with the value:</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SET2</name>
              <description>When a write to one of these bits occurs, with the value:</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SET1</name>
              <description>When a write to one of these bits occurs, with the value:</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SET0</name>
              <description>When a write to one of these bits occurs, with the value:</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCCLAIMCLR</name>
          <description>Claim Tag Clear Register</description>
          <addressOffset>0x41FA4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLR3</name>
              <description>When a write to one of these bits occurs, with the value:</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLR2</name>
              <description>When a write to one of these bits occurs, with the value:</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLR1</name>
              <description>When a write to one of these bits occurs, with the value:</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLR0</name>
              <description>When a write to one of these bits occurs, with the value:</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCAUTHSTATUS</name>
          <description>Returns the level of tracing that the trace unit can support</description>
          <addressOffset>0x41FB8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SNID</name>
              <description>Indicates whether the system enables the trace unit to support Secure non-invasive debug:</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SID</name>
              <description>Indicates whether the trace unit supports Secure invasive debug:</description>
              <bitRange>[5:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NSNID</name>
              <description>Indicates whether the system enables the trace unit to support Non-secure non-invasive debug:</description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NSID</name>
              <description>Indicates whether the trace unit supports Non-secure invasive debug:</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCDEVARCH</name>
          <description>TRCDEVARCH</description>
          <addressOffset>0x41FBC</addressOffset>
          <resetValue>0x47724A13</resetValue>
          <fields>
            <field>
              <name>ARCHITECT</name>
              <description>reads as 0b01000111011</description>
              <bitRange>[31:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRESENT</name>
              <description>reads as 0b1</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REVISION</name>
              <description>reads as 0b0000</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHID</name>
              <description>reads as 0b0100101000010011</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCDEVID</name>
          <description>TRCDEVID</description>
          <addressOffset>0x41FC8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRCDEVID</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCDEVTYPE</name>
          <description>TRCDEVTYPE</description>
          <addressOffset>0x41FCC</addressOffset>
          <resetValue>0x00000013</resetValue>
          <fields>
            <field>
              <name>SUB</name>
              <description>reads as 0b0001</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR</name>
              <description>reads as 0b0011</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPIDR4</name>
          <description>TRCPIDR4</description>
          <addressOffset>0x41FD0</addressOffset>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>SIZE</name>
              <description>reads as `ImpDef</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_2</name>
              <description>reads as `ImpDef</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPIDR5</name>
          <description>TRCPIDR5</description>
          <addressOffset>0x41FD4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRCPIDR5</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPIDR6</name>
          <description>TRCPIDR6</description>
          <addressOffset>0x41FD8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRCPIDR6</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPIDR7</name>
          <description>TRCPIDR7</description>
          <addressOffset>0x41FDC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRCPIDR7</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPIDR0</name>
          <description>TRCPIDR0</description>
          <addressOffset>0x41FE0</addressOffset>
          <resetValue>0x00000021</resetValue>
          <fields>
            <field>
              <name>PART_0</name>
              <description>reads as `ImpDef</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPIDR1</name>
          <description>TRCPIDR1</description>
          <addressOffset>0x41FE4</addressOffset>
          <resetValue>0x000000BD</resetValue>
          <fields>
            <field>
              <name>DES_0</name>
              <description>reads as `ImpDef</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PART_0</name>
              <description>reads as `ImpDef</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPIDR2</name>
          <description>TRCPIDR2</description>
          <addressOffset>0x41FE8</addressOffset>
          <resetValue>0x0000002B</resetValue>
          <fields>
            <field>
              <name>REVISION</name>
              <description>reads as `ImpDef</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>JEDEC</name>
              <description>reads as 0b1</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_0</name>
              <description>reads as `ImpDef</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCPIDR3</name>
          <description>TRCPIDR3</description>
          <addressOffset>0x41FEC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>REVAND</name>
              <description>reads as `ImpDef</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMOD</name>
              <description>reads as `ImpDef</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCCIDR0</name>
          <description>TRCCIDR0</description>
          <addressOffset>0x41FF0</addressOffset>
          <resetValue>0x0000000D</resetValue>
          <fields>
            <field>
              <name>PRMBL_0</name>
              <description>reads as 0b00001101</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCCIDR1</name>
          <description>TRCCIDR1</description>
          <addressOffset>0x41FF4</addressOffset>
          <resetValue>0x00000090</resetValue>
          <fields>
            <field>
              <name>CLASS</name>
              <description>reads as 0b1001</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRMBL_1</name>
              <description>reads as 0b0000</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCCIDR2</name>
          <description>TRCCIDR2</description>
          <addressOffset>0x41FF8</addressOffset>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>PRMBL_2</name>
              <description>reads as 0b00000101</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRCCIDR3</name>
          <description>TRCCIDR3</description>
          <addressOffset>0x41FFC</addressOffset>
          <resetValue>0x000000B1</resetValue>
          <fields>
            <field>
              <name>PRMBL_3</name>
              <description>reads as 0b10110001</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTICONTROL</name>
          <description>CTI Control Register</description>
          <addressOffset>0x42000</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>GLBEN</name>
              <description>Enables or disables the CTI</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIINTACK</name>
          <description>CTI Interrupt Acknowledge Register</description>
          <addressOffset>0x42010</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>INTACK</name>
              <description>Acknowledges the corresponding ctitrigout output. There is one bit of the register for each ctitrigout output. When a 1 is written to a bit in this register, the corresponding ctitrigout is acknowledged, causing it to be cleared.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIAPPSET</name>
          <description>CTI Application Trigger Set Register</description>
          <addressOffset>0x42014</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>APPSET</name>
              <description>Setting a bit HIGH generates a channel event for the selected channel. There is one bit of the register for each channel</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIAPPCLEAR</name>
          <description>CTI Application Trigger Clear Register</description>
          <addressOffset>0x42018</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>APPCLEAR</name>
              <description>Sets the corresponding bits in the CTIAPPSET to 0. There is one bit of the register for each channel.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIAPPPULSE</name>
          <description>CTI Application Pulse Register</description>
          <addressOffset>0x4201C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>APPULSE</name>
              <description>Setting a bit HIGH generates a channel event pulse for the selected channel. There is one bit of the register for each channel.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIINEN0</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x42020</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGINEN</name>
              <description>Enables a cross trigger event to the corresponding channel when a ctitrigin input is activated. There is one bit of the field for each of the four channels</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIINEN1</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x42024</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGINEN</name>
              <description>Enables a cross trigger event to the corresponding channel when a ctitrigin input is activated. There is one bit of the field for each of the four channels</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIINEN2</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x42028</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGINEN</name>
              <description>Enables a cross trigger event to the corresponding channel when a ctitrigin input is activated. There is one bit of the field for each of the four channels</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIINEN3</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x4202C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGINEN</name>
              <description>Enables a cross trigger event to the corresponding channel when a ctitrigin input is activated. There is one bit of the field for each of the four channels</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIINEN4</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x42030</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGINEN</name>
              <description>Enables a cross trigger event to the corresponding channel when a ctitrigin input is activated. There is one bit of the field for each of the four channels</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIINEN5</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x42034</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGINEN</name>
              <description>Enables a cross trigger event to the corresponding channel when a ctitrigin input is activated. There is one bit of the field for each of the four channels</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIINEN6</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x42038</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGINEN</name>
              <description>Enables a cross trigger event to the corresponding channel when a ctitrigin input is activated. There is one bit of the field for each of the four channels</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIINEN7</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x4203C</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGINEN</name>
              <description>Enables a cross trigger event to the corresponding channel when a ctitrigin input is activated. There is one bit of the field for each of the four channels</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIOUTEN0</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x420A0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGOUTEN</name>
              <description>Enables a cross trigger event to ctitrigout when the corresponding channel is activated. There is one bit of the field for each of the four channels.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIOUTEN1</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x420A4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGOUTEN</name>
              <description>Enables a cross trigger event to ctitrigout when the corresponding channel is activated. There is one bit of the field for each of the four channels.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIOUTEN2</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x420A8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGOUTEN</name>
              <description>Enables a cross trigger event to ctitrigout when the corresponding channel is activated. There is one bit of the field for each of the four channels.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIOUTEN3</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x420AC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGOUTEN</name>
              <description>Enables a cross trigger event to ctitrigout when the corresponding channel is activated. There is one bit of the field for each of the four channels.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIOUTEN4</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x420B0</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGOUTEN</name>
              <description>Enables a cross trigger event to ctitrigout when the corresponding channel is activated. There is one bit of the field for each of the four channels.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIOUTEN5</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x420B4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGOUTEN</name>
              <description>Enables a cross trigger event to ctitrigout when the corresponding channel is activated. There is one bit of the field for each of the four channels.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIOUTEN6</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x420B8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGOUTEN</name>
              <description>Enables a cross trigger event to ctitrigout when the corresponding channel is activated. There is one bit of the field for each of the four channels.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIOUTEN7</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x420BC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGOUTEN</name>
              <description>Enables a cross trigger event to ctitrigout when the corresponding channel is activated. There is one bit of the field for each of the four channels.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTITRIGINSTATUS</name>
          <description>CTI Trigger to Channel Enable Registers</description>
          <addressOffset>0x42130</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGINSTATUS</name>
              <description>Shows the status of the ctitrigin inputs. There is one bit of the field for each trigger input.Because the register provides a view of the raw ctitrigin inputs, the reset value is UNKNOWN.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTITRIGOUTSTATUS</name>
          <description>CTI Trigger In Status Register</description>
          <addressOffset>0x42134</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TRIGOUTSTATUS</name>
              <description>Shows the status of the ctitrigout outputs. There is one bit of the field for each trigger output.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTICHINSTATUS</name>
          <description>CTI Channel In Status Register</description>
          <addressOffset>0x42138</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CTICHOUTSTATUS</name>
              <description>Shows the status of the ctichout outputs. There is one bit of the field for each channel output</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTIGATE</name>
          <description>Enable CTI Channel Gate register</description>
          <addressOffset>0x42140</addressOffset>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>CTIGATEEN3</name>
              <description>Enable ctichout3. Set to 0 to disable channel propagation.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CTIGATEEN2</name>
              <description>Enable ctichout2. Set to 0 to disable channel propagation.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CTIGATEEN1</name>
              <description>Enable ctichout1. Set to 0 to disable channel propagation.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CTIGATEEN0</name>
              <description>Enable ctichout0. Set to 0 to disable channel propagation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASICCTL</name>
          <description>External Multiplexer Control register</description>
          <addressOffset>0x42144</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ASICCTL</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITCHOUT</name>
          <description>Integration Test Channel Output register</description>
          <addressOffset>0x42EE4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CTCHOUT</name>
              <description>Sets the value of the ctichout outputs</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITTRIGOUT</name>
          <description>Integration Test Trigger Output register</description>
          <addressOffset>0x42EE8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CTTRIGOUT</name>
              <description>Sets the value of the ctitrigout outputs</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITCHIN</name>
          <description>Integration Test Channel Input register</description>
          <addressOffset>0x42EF4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CTCHIN</name>
              <description>Reads the value of the ctichin inputs.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ITCTRL</name>
          <description>Integration Mode Control register</description>
          <addressOffset>0x42F00</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>IME</name>
              <description>Integration Mode Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEVARCH</name>
          <description>Device Architecture register</description>
          <addressOffset>0x42FBC</addressOffset>
          <resetValue>0x47701A14</resetValue>
          <fields>
            <field>
              <name>ARCHITECT</name>
              <description>Indicates the component architect</description>
              <bitRange>[31:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRESENT</name>
              <description>Indicates whether the DEVARCH register is present</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REVISION</name>
              <description>Indicates the architecture revision</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARCHID</name>
              <description>Indicates the component</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEVID</name>
          <description>Device Configuration register</description>
          <addressOffset>0x42FC8</addressOffset>
          <resetValue>0x00040800</resetValue>
          <fields>
            <field>
              <name>NUMCH</name>
              <description>Number of ECT channels available</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMTRIG</name>
              <description>Number of ECT triggers available.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EXTMUXNUM</name>
              <description>Indicates the number of multiplexers available on Trigger Inputs and Trigger Outputs that are using asicctl. The default value of 0b00000 indicates that no multiplexing is present. This value of this bit depends on the Verilog define EXTMUXNUM that you must change accordingly.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEVTYPE</name>
          <description>Device Type Identifier register</description>
          <addressOffset>0x42FCC</addressOffset>
          <resetValue>0x00000014</resetValue>
          <fields>
            <field>
              <name>SUB</name>
              <description>Sub-classification of the type of the debug component as specified in the ARM Architecture Specification within the major classification as specified in the MAJOR field.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MAJOR</name>
              <description>Major classification of the type of the debug component as specified in the ARM Architecture Specification for this debug and trace component.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIDR4</name>
          <description>CoreSight Peripheral ID4</description>
          <addressOffset>0x42FD0</addressOffset>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>SIZE</name>
              <description>Always 0b0000. Indicates that the device only occupies 4KB of memory</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_2</name>
              <description>Together, PIDR1.DES_0, PIDR2.DES_1, and PIDR4.DES_2 identify the designer of the component.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIDR5</name>
          <description>CoreSight Peripheral ID5</description>
          <addressOffset>0x42FD4</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PIDR5</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIDR6</name>
          <description>CoreSight Peripheral ID6</description>
          <addressOffset>0x42FD8</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PIDR6</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIDR7</name>
          <description>CoreSight Peripheral ID7</description>
          <addressOffset>0x42FDC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PIDR7</name>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIDR0</name>
          <description>CoreSight Peripheral ID0</description>
          <addressOffset>0x42FE0</addressOffset>
          <resetValue>0x00000021</resetValue>
          <fields>
            <field>
              <name>PART_0</name>
              <description>Bits[7:0] of the 12-bit part number of the component. The designer of the component assigns this part number.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIDR1</name>
          <description>CoreSight Peripheral ID1</description>
          <addressOffset>0x42FE4</addressOffset>
          <resetValue>0x000000BD</resetValue>
          <fields>
            <field>
              <name>DES_0</name>
              <description>Together, PIDR1.DES_0, PIDR2.DES_1, and PIDR4.DES_2 identify the designer of the component.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PART_1</name>
              <description>Bits[11:8] of the 12-bit part number of the component. The designer of the component assigns this part number.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIDR2</name>
          <description>CoreSight Peripheral ID2</description>
          <addressOffset>0x42FE8</addressOffset>
          <resetValue>0x0000000B</resetValue>
          <fields>
            <field>
              <name>REVISION</name>
              <description>This device is at r1p0</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>JEDEC</name>
              <description>Always 1. Indicates that the JEDEC-assigned designer ID is used.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DES_1</name>
              <description>Together, PIDR1.DES_0, PIDR2.DES_1, and PIDR4.DES_2 identify the designer of the component.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIDR3</name>
          <description>CoreSight Peripheral ID3</description>
          <addressOffset>0x42FEC</addressOffset>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>REVAND</name>
              <description>Indicates minor errata fixes specific to the revision of the component being used, for example metal fixes after implementation. In most cases, this field is 0b0000. ARM recommends that the component designers ensure that a metal fix can change this field if required, for example, by driving it from registers that reset to 0b0000.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMOD</name>
              <description>Customer Modified. Indicates whether the customer has modified the behavior of the component. In most cases, this field is 0b0000. Customers change this value when they make authorized modifications to this component.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIDR0</name>
          <description>CoreSight Component ID0</description>
          <addressOffset>0x42FF0</addressOffset>
          <resetValue>0x0000000D</resetValue>
          <fields>
            <field>
              <name>PRMBL_0</name>
              <description>Preamble[0]. Contains bits[7:0] of the component identification code</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIDR1</name>
          <description>CoreSight Component ID1</description>
          <addressOffset>0x42FF4</addressOffset>
          <resetValue>0x00000090</resetValue>
          <fields>
            <field>
              <name>CLASS</name>
              <description>Class of the component, for example, whether the component is a ROM table or a generic CoreSight component. Contains bits[15:12] of the component identification code.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRMBL_1</name>
              <description>Preamble[1]. Contains bits[11:8] of the component identification code.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIDR2</name>
          <description>CoreSight Component ID2</description>
          <addressOffset>0x42FF8</addressOffset>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>PRMBL_2</name>
              <description>Preamble[2]. Contains bits[23:16] of the component identification code.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIDR3</name>
          <description>CoreSight Component ID3</description>
          <addressOffset>0x42FFC</addressOffset>
          <resetValue>0x000000B1</resetValue>
          <fields>
            <field>
              <name>PRMBL_3</name>
              <description>Preamble[3]. Contains bits[31:24] of the component identification code.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>

